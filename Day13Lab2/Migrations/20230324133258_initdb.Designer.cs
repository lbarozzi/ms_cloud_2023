// <auto-generated />
using System;
using Day13Lab2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day13Lab2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230324133258_initdb")]
    partial class initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Day13Lab2.Models.Temperature", b =>
                {
                    b.Property<int>("TemperatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TemperatureDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("TemperatureValue")
                        .HasColumnType("REAL");

                    b.Property<int>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TemperatureID");

                    b.HasIndex("ZoneId");

                    b.ToTable("Temperatures");
                });

            modelBuilder.Entity("Day13Lab2.Models.Zone", b =>
                {
                    b.Property<int>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TargetTemperarure")
                        .HasColumnType("REAL");

                    b.HasKey("ZoneID");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Day13Lab2.Models.Temperature", b =>
                {
                    b.HasOne("Day13Lab2.Models.Zone", "Zene")
                        .WithMany("Temperatures")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zene");
                });

            modelBuilder.Entity("Day13Lab2.Models.Zone", b =>
                {
                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
